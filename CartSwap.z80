;****************************************************************************************************************************************************
;*	CartSwap Source File
;*
;****************************************************************************************************************************************************
;*
;*
;****************************************************************************************************************************************************

;****************************************************************************************************************************************************
;*	Includes
;****************************************************************************************************************************************************
	;Program includes
	INCLUDE	"Includes/Hardware.inc"
	INCLUDE "Includes/Header.inc"
	INCLUDE "Includes/Constants.inc"
	INCLUDE "Includes/Wram.inc"
	INCLUDE "Includes/Functions.inc"
	
	;Asset includes
	INCLUDE "Assets/Screen.z80"
	INCLUDE "Assets/Tiles.z80"

;****************************************************************************************************************************************************
;*	Program Start
;****************************************************************************************************************************************************

	SECTION "Program Start",ROM0[$0150]
Start::
	di
	
	xor a
	ld [rLCDC], a	;turn off the screen
	
	;setup palettes
	ld a, cDefaultPalette
	ld [rBGP], a
	ld [rOBP0], a 
	ld [rOBP1], a 
	
	ld bc, cNumTiles * cTileSizeInBytes
	ld hl, TileData
	ld de, _VRAM
	call memcpy			;load tile data into VRAM
	
	xor a
	ld bc, $E000-$C000
	ld de, _RAM
	call memset
	
	ld hl, Screen
	ld de, _SCRN0
	ld b, 18
	ld c, 20
	call load_map		;load the map into VRAM
	
	ld a, cArrowTile
	ld [_OAMRAM+2], a	;set sprite 0 to use the arrow tile
	
	xor a
	ld [arrow_pos], a
	call handle_arrow		;position the arrow
	
	ld a, (LCDCF_ON | LCDCF_WIN9800 | LCDCF_WINOFF | LCDCF_BG8000 | LCDCF_BG9800 | LCDCF_OBJ8 | LCDCF_OBJON | LCDCF_BGON)
	ld [rLCDC], a	;turn the screen back on with the above setting
	
	ld a, IEF_VBLANK
	ld [rIE], a		;enable vblank interrupt
	ei
	
Main::
	halt
	
	call poll_input
	call handle_arrow
	
	ld a, [input_pressed]
	bit 0, a
	jr z, Main
	
	ld de, ram_program
	
	ld a, [arrow_pos]
	or a
	jr z, load_start
	cp 1
	jr z, load_save
	cp 2
	jr z, load_graphics
	jr load_advGraphics

load_start:	
	ld bc, menu_start_end - menu_start
	ld hl, menu_start
	jr run_ram_program
	
load_save:
	ld bc, menu_save_end - menu_save
	ld hl, menu_save
	jr run_ram_program

load_graphics:
	ld bc, menu_graphics_end - menu_graphics
	ld hl, menu_graphics
	jr run_ram_program
	
load_advGraphics:
	ld bc, menu_advGraphics_end - menu_advGraphics
	ld hl, menu_advGraphics
	jr run_ram_program
	
run_ram_program:
	call memcpy
	
	call ram_program

	
;*** End Of File ***